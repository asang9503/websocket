<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yyx.studentad.mapper.SchoolPerMapper" >
  <resultMap id="BaseResultMap" type="com.yyx.studentad.pojo.SchoolPer" >
    <id column="per_id" property="perId" jdbcType="INTEGER" />
    <result column="per_username" property="perUsername" jdbcType="VARCHAR" />
    <result column="nickname" property="nickName" jdbcType="VARCHAR" />
    <result column="per_password" property="perPassword" jdbcType="INTEGER" />
    <result column="per_type" property="perType" jdbcType="CHAR" />
    <result column="updatetime" property="updatetime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    per_id, per_username, nickname, per_password, per_type, updatetime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from school_per
    where per_id = #{perId,jdbcType=INTEGER}
  </select>

  <select id="selectByUsernameAndPassword" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from school_per
    where per_username = #{perUsername} and per_password = #{perPassword}
  </select>
  <select id="selectByUsername" resultType="Integer">
    select per_id
    from school_per
    where per_username = #{perUsername}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from school_per
    where per_id = #{perId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yyx.studentad.pojo.SchoolPer" >
    insert into school_per (per_id, per_username, nickname, per_password,
      per_type, updatetime)
    values (#{perId,jdbcType=INTEGER}, #{perUsername,jdbcType=VARCHAR}, #{nickName}, #{perPassword,jdbcType=INTEGER},
      #{perType,jdbcType=CHAR}, now())
  </insert>
  <insert id="insertSelective" parameterType="com.yyx.studentad.pojo.SchoolPer" >
    insert into school_per
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="perId != null" >
        per_id,
      </if>
      <if test="perUsername != null" >
        per_username,
      </if>
      <if test="nickName != null" >
        nickname,
      </if>
      <if test="perPassword != null" >
        per_password,
      </if>
      <if test="perType != null" >
        per_type,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="perId != null" >
        #{perId,jdbcType=INTEGER},
      </if>
      <if test="perUsername != null" >
        #{perUsername,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="perPassword != null" >
        #{perPassword,jdbcType=INTEGER},
      </if>
      <if test="perType != null" >
        #{perType,jdbcType=CHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yyx.studentad.pojo.SchoolPer" >
    update school_per
    <set >
      <if test="perUsername != null" >
        per_username = #{perUsername,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nickname = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="perPassword != null" >
        per_password = #{perPassword,jdbcType=INTEGER},
      </if>
      <if test="perType != null" >
        per_type = #{perType,jdbcType=CHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=VARCHAR},
      </if>
    </set>
    where per_id = #{perId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yyx.studentad.pojo.SchoolPer" >
    update school_per
    set per_username = #{perUsername,jdbcType=VARCHAR},
      per_password = #{perPassword,jdbcType=INTEGER},
      nickname = #{nickName,jdbcType=INTEGER},
      per_type = #{perType,jdbcType=CHAR},
      updatetime = #{updatetime,jdbcType=VARCHAR}
    where per_id = #{perId,jdbcType=INTEGER}
  </update>
</mapper>